version: '3.8'

services:
  db:
    image: postgres:17  # Используем официальный образ PostgreSQL
    container_name: my_postgres  # Имя контейнера
    environment:
      POSTGRES_DB: webdb  # Имя базы данных
      POSTGRES_USER: postgres  # Имя пользователя
      POSTGRES_PASSWORD: 2476  # Пароль пользователя
    ports:
      - "5432:5432"  # Прокидываем порты
    volumes:
      - postgres_data:/var/lib/postgresql/data  # Монтируем volume для данных базы
    networks:
      - app-network  # Сетевое соединение с другими сервисами

  web:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - static_volume:/app/core/static  # Монтируем volume в контейнер с Django
      - media_volume:/app/core/media
      - uwsgi_socket:/tmp  # Общий volume для сокета
    command: uwsgi --ini /app/uwsgi.ini  # Запуск uWSGI
    networks:
      - app-network

  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    volumes:
      - static_volume:/app/core/static  # Монтируем тот же volume в контейнер с Nginx
      - media_volume:/app/core/media
      - uwsgi_socket:/tmp  # Монтируем тот же сокет
    ports:
      - "8000:8000"  # Лучше сразу использовать 80 для продакшна
    networks:
      - app-network

volumes:
  static_volume:  # Определяем общий volume для статики
  media_volume:  # Определяем общий volume для медиафайлов
  uwsgi_socket:  # Определяем volume для сокета
  postgres_data:

networks:
  app-network:
